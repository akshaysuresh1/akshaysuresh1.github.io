[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Akshay Suresh",
    "section": "",
    "text": "AI Researcher | Data Scientist | Freelancer\n\nHi there! I am Akshay Suresh. Professionaly, I love developing artificial intelligence (AI) algorithms to tackle challenging real-world problems and generate sustainable benefit for humanity.\nBuilding on my educational training in physics and data science, I am excited to make impactful contributions in the following domains.\n\nAI for climate change\nAI for healthcare\nEnvironment perception algorithms for autonomous vehicles\nPioneering safe artificial general intelligence\n\nOutside of work, I enjoy following cricket, playing board games, and exploring natural wonders. Visit my About and Projects pages to hear of my experiences in and beyond the workplace."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nScientific Discovery in the Age of Artificial Intelligence\n\n\n\n\n\n\n\nPaper\n\n\nAI for Science\n\n\n\n\nAI techniques, with their power to accelerate scientific discovery, are becoming increasingly integrated into all stages of scientific research, including hypothesis testing, data annotation, system modeling, and insight generation. This paper reviews key scientific breakthroughs from the past decade in the application of AI for science. Here, I touch upon a selection of AI advancements that are…\n\n\n\n\n\n\nJan 7, 2024\n\n\nAkshay Suresh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Refereed Publications",
    "section": "",
    "text": "0000-0002-5389-7806\n\n Journal articles\nAstronomy: 9 publications during 2016 – 2023 (7 first-author, 2 co-author).\n\n[Reuters press release] Suresh, A., Gajjar, V., Nagarajan, P., Sheikh, S. Z., et al., (9 authors), A 4–8 GHz Galactic Center Search for Periodic Technosignatures, 2023 AJ 165 255.\nSuresh, A., Cordes, J. M., Chatterjee, S., Gajjar, V., et al. (9 authors), 4–8 GHz Fourier-domain Searches for Galactic Center Pulsars, 2022 ApJ 933 121.\nSuresh, A., Cordes, J. M., Chatterjee, S., Gajjar, V., et al. (7 authors), 4–8 GHz Spectrotemporal Emission from the Galactic Center Magnetar PSR J1745—2900, 2021 ApJ 921 101.\nSuresh, A., Chatterjee, S., Cordes, J. M., & Crawford, F., An Arecibo Search for Fast Radio Transients from M87, 2021 ApJ 920 16.\nSuresh, A., Chatterjee, S., Cordes, J. M., Bastian, T. S. & Hallinan, G., Detection of 2–4 GHz Continuum Emission from \\(\\epsilon\\) Eridani, 2020 ApJ 904 138.\nSuresh, A., & Cordes, J. M., Induced Polarization from Birefringent Pulse Splitting in Magnetoionic Media, 2019 ApJ 870 29.\nSuresh, A., Sharma, R., Oberoi, D., et al. (39 authors), Wavelet-based Characterization of Small-scale Solar Emission Features at Low Radio Frequencies, 2017 ApJ 843 19.\nGajjar, V., et al. (22 authors including Suresh, A.), Searching for Broadband Pulsed Beacons from 1883 Stars Using Neural Networks, 2022 ApJ 932 81.\nGajjar, V., et al. (26 authors including Suresh, A.), The Breakthrough Listen Search For Intelligent Life Near the Galactic Center I, 2021 AJ 162 33.\n\n\n\n Conference Proceedings\n\nVaillancourt, P. Z., et al. (9 authors including Suresh, A.), Reproducible and Portable Workflows for Scientific Computing and HPC in the Cloud, PEARC 2020.\nOberoi, D., et al. (10 authors including Suresh, A.), Solar Science at Metric Radio Wavelengths: Coming of Age, IAU Symposium 340, 2018.\nSharma, R., Oberoi, D., Suresh, A., & Arjunwardkar, M., Quantifying Weak Non-thermal Meterwave Solar Emission Using Non-imaging Techniques, IAU Symposium 340, 2018.\n\n\n\n Dissertations\n\nPhD thesis: Suresh, A., Radio Transient Searches from Millisecond to Hour-long Time Scales, Cornell University, USA, 2023.\nMS thesis: Suresh, A., Investigation of Small Scale Weak Solar Emissions at Low Radio Frequencies, IISER Pune, India, 2017."
  },
  {
    "objectID": "boardgames.html",
    "href": "boardgames.html",
    "title": "Board Game Listing (2020 – Present)",
    "section": "",
    "text": "Anomia\nAzul\nBiblios\nCarcassonne\nCatan Junior\nCoup\nDragonwood\nExploding Kittens\nFluxx\nImhotep\nLanterns: The Harvest Festival\nModern Art\nPerudo\nScarabya\nScrabble\nSequence\nSuspend\nTicket to Ride: Europe\nTop that!\nTrash Pandas"
  },
  {
    "objectID": "projects/2022_06_15_DSbootcamp/index.html#project-context",
    "href": "projects/2022_06_15_DSbootcamp/index.html#project-context",
    "title": "Predicting Fertilizer Input for Rice Cultivation in India",
    "section": "Project Context",
    "text": "Project Context\nThis project was completed as part of the Erdös Institute Data Science Bootcamp, Spring 2022. Within a hard 2-week deadline, team members were required to define their project goal, identify target stakeholders, gather data, and execute data analyses. The following deliverables were due at the end of the 2-week project window.\n\n1-page executive summary\n5-minutes video presentation\nPresentation slides\nAnnotated Github repository\n\nLinks to our submitted deliverables are provided in a note near the top of this page."
  },
  {
    "objectID": "projects/2022_06_15_DSbootcamp/index.html#project-workflow",
    "href": "projects/2022_06_15_DSbootcamp/index.html#project-workflow",
    "title": "Predicting Fertilizer Input for Rice Cultivation in India",
    "section": "Project Workflow",
    "text": "Project Workflow\n\n\nProject workflow diagram\n\nObjective: Predict mean NPK (nitrogen, phosophorous and potash) fertilizer inputs to achieve specific rice yields in different cultivation environments across India.\nTarget stakeholders: Agriculture policy makers in India\nData sources:\n\nDistrict-level database (1990–2016) maintained by the International Crops Research Institute for the Semi-Arid Tropics (ICRISAT):\n\nRice cultivation data: cropped area, yield, irrigated area\nSeasonality and temperature\nWater cycle data: precipitation, surface runoff, and evapotranspiration\nWind speed\nHistorical NPK fertilizer usage\n\nShapefile of Indian districts from Kaggle"
  },
  {
    "objectID": "projects/2022_06_15_DSbootcamp/index.html#modeling-and-results",
    "href": "projects/2022_06_15_DSbootcamp/index.html#modeling-and-results",
    "title": "Predicting Fertilizer Input for Rice Cultivation in India",
    "section": "Modeling and Results",
    "text": "Modeling and Results\nRice is a hardy crop capable of thriving in a variety of soils, including loams, silts, and gravel. Collating up to 26 years of district-level rice cultivation (cropped area, yield, irrigated area) and environment data (temperature, precipitation, wind speed, evapotranspiration), our analysis involved three steps.\n\nFirstly, we grouped districts with similar ecological parameters into clusters. To do so, we experimented with two unsupervised learning approaches, namely, \\(k\\)-means and hierarchical clustering. Both methods favored the grouping of Indian districts into 6 rice cultivation clusters.\n\n\n\nOptimal clustering of Indian districts based on application of hierarchical clustering to our environmental data (temperature, precipitation, wind speed, evapotranspiration). Note that the above map bears some visual resemblance to the Koppen-Geiger climate classification map of India. However, we caution readers against performing meticulous comparisons between these maps as our algorithms additionally incorporate soil-dependent features such as surface runoff and evapotranspiration.\n\n\nOver independent clusters, we regressed the historical NPK consumption data against rice yield. Here, we trialed simple linear regression, random forest regression, and support vector regression. \n\n\nResults from application of support vector regression to cluster 1 data. Our fit residuals to the potash data (bottom row) look reasonably flat and structure-free. However, the same cannot be said for our nitrogen (top row) and phosphorous (middle row) fit residuals, possibly hinting at either some confounding variable or some parameter cross-correlations unaccounted for in our analyses.\n\n\nThe symmetric mean absolute percent error (SMAPE) offers a convenient difference-based relative measure for comparing model performances across clusters with unequal numbers of data points.\n\n\\[\n{\\rm SMAPE} = \\left( \\frac{100\\%}{N_{\\rm observations}} \\right) \\sum_{\\rm observations} \\left(\\frac{|{\\rm True \\ value} - {\\rm Predicted \\ value}|}{(|{\\rm True \\ value}| + |{\\rm Predicted \\ value}|)/2} \\right)\n\\]\nFor a perfect model (true value = predicted value), \\({\\rm SMAPE} = 0\\%\\). Meanwhile, a null prediction (predicted value = 0) entails \\({\\rm SMAPE} = 200\\%\\).\n\nStudying the above SMAPE barplots, we note that support vector regression marginally outperforms other regression models. However, in general, our regression models are not too accurate, yielding median SMAPE values of about 50% for N and P, and nearly 75% for K."
  },
  {
    "objectID": "projects/2022_06_15_DSbootcamp/index.html#areas-for-improvement",
    "href": "projects/2022_06_15_DSbootcamp/index.html#areas-for-improvement",
    "title": "Predicting Fertilizer Input for Rice Cultivation in India",
    "section": "Areas for Improvement",
    "text": "Areas for Improvement\n\nConsider incorporating data on soil nutrient content, soil type and texture, and solar irradiance to improve the accuracy of model fits.\nAssess the impact of crop rotation and off-season farming practices on the sustainability of a desired crop yield."
  },
  {
    "objectID": "blogposts/2024_01_07_AI4Science/index.html#learning-meaningful-representations-of-scientific-data",
    "href": "blogposts/2024_01_07_AI4Science/index.html#learning-meaningful-representations-of-scientific-data",
    "title": "Scientific Discovery in the Age of Artificial Intelligence",
    "section": "Learning Meaningful Representations of Scientific Data",
    "text": "Learning Meaningful Representations of Scientific Data\nApplications of AI analyses to tackle science problems are often limited by the scarcity of high-quality curated datasets for exploration. Frequently, real-world datasets are incomplete, contain inaccurate observations, and come at variable sample resolutions. Moreover, even in situations where homogeneous data are aplenty, data labeling for supervised learning presents a laborious time investment. Here is where self-supervised learning comes to the rescue.\nSelf-supervised learning (SSL) is a machine learning paradigm that enables a model to automatically generate labels for unstructured data, thereby eliminating the need for large pre-labeled datasets. Building upon a small set of accurate human-annotated data, SSL algorithms learn latent representations of the input data through an iterative procedure. The labels generated in the first iteration are treated as the ground truth in the second iteration and so on.\nGenerative SSL tries to predict masked portions of raw data (text, images, audio, or video) from unmasked segments by learning embeddings of their underlying shared information. On the other hand, contrastive SSL techniques involves defining positive and negative versions of an “anchor” (say, the concept of what a dog looks like). Using a notion of distance in feature space, the algorithm then looks to align positives (e.g., images of dogs) to the anchor while simultaneously repelling the negatives (e.g., images of cats).\n\n\n\n\n\n\nResources on Self-supervised Learning\n\n\n\n\nA Beginner’s Guide to Self-supervised Learning by Rohit Kundu\nFDL 2022 Live Showcase video: Self-Supervised Learning for Change Detection in Synthetic Aperture Radar Data"
  },
  {
    "objectID": "blogposts/2024_01_07_AI4Science/index.html#neural-operators",
    "href": "blogposts/2024_01_07_AI4Science/index.html#neural-operators",
    "title": "Scientific Discovery in the Age of Artificial Intelligence",
    "section": "Neural Operators",
    "text": "Neural Operators\nScientific experiments typically involve discrete measurements of intrinsically continuous quantities. For example, consider wind velocity in flight dynamics or magnetic field strength in tokamak nuclear fusion reactors. Conventional neural networks assume a fixed data discretization and are hence, inflexible at handling raw data sampled at varying resolutions. Neural operators, in contrast, learn mappings between function spaces of the input and output data to allow discretization-invariant predictions. Once these operators are trained, they can be evaluated at any data resolution without a need for model retraining.\n\n\n\n\n\n\nResources on Neural Operators and Their Applications\n\n\n\n\nNeural Operators in PyTorch\nVideo: Anima Anandkumar, Neural operator: A new paradigm for learning PDEs.\nFDL 2021 Live Showcase video: Digital Twin Earth: Coasts.\nKovachki, N., Li, Z., et al., “Neural Operator: Learning Maps Between Function Spaces”, JMLR, 4(89):1−97, 2023."
  },
  {
    "objectID": "blogposts/2024_01_07_AI4Science/index.html#reinforcement-learning-for-navigating-large-hypothesis-spaces",
    "href": "blogposts/2024_01_07_AI4Science/index.html#reinforcement-learning-for-navigating-large-hypothesis-spaces",
    "title": "Scientific Discovery in the Age of Artificial Intelligence",
    "section": "Reinforcement Learning for Navigating Large Hypothesis Spaces",
    "text": "Reinforcement Learning for Navigating Large Hypothesis Spaces\nThe prospect of sampling through all possible competing hypotheses agreeable with the data can seem intimidating at first. Reinforcement learning (RL) instead recasts the problem as an endeavor to find a single good solution that fits the data.\nRL can be thought of as the science and framework of learning to make decisions through interaction. Core concepts of the RL formalism include:\n\nAn environment (governs the dynamics of the problem)\nA scalar reward signal (specifies the goal)\nAn agent comprising necessarily of an agent state and a policy (mapping from agent states to actions).\n\nAt every time step \\(t\\), the agent makes an observation of the environment and perceives a reward (or a penalty). Based on the instantaneous reward, the agent estimates its rewards into the future and decides its next action based on an internal policy. By defining AI policies that maximize rewards in the direction of increased fit between model parameters and the data, RL can drive systems towards optimal solutions. Further, by introducing inductive biases in AI policies, one can incorporate prior scientific knowledge to steer searches towards realistically feasible solutions, thereby enhancing model trust and interpretability.\nNote that the AI policy must allow adequate exploration of the search parameter space so as to not get trapped in a local optimum during the quest to globally maximize the cumulative reward.\n\n\n\n\n\n\nResources on Reinforcement Learning\n\n\n\n\nGoogle DeepMind 2021 Reinforcement Learning Course, University College London\nCoursera: Reinforcement Learning Specialization"
  },
  {
    "objectID": "projects/2022_08_31_FDL_CO2/index.html#the-challenge",
    "href": "projects/2022_08_31_FDL_CO2/index.html#the-challenge",
    "title": "Geomechanics for CO\\(_2\\) Sequestration",
    "section": "The Challenge",
    "text": "The Challenge\nAchieving the US goal of carbon neutrality by 2050 will require the storage of over 30 gigatons of CO\\(_2\\) across 30,000 carbon sequestration plants in the country. However, carbon capture and storage, like any other underground fluid injection process, carries the risk of artificially inducing earthquakes. A noteworthy historical example in this regard is Oklahoma, a US state which saw sparse seismic activity during 1974 – 2008. Continued underground wastewater disposal since then has sparked a significant surge in seismic activity across Oklahoma.\n\n\nObserved lagged correlation between wastewater disposal rate (red) and the associated induced seismicity (black) in Oklahoma, USA. Data sources: Oklahoma Geological Survey & Oklahoma Corporation Commission.\n\nForecasts of induced seismicity are essential to permit bulk underground storage of CO\\(_2\\) with minimal seismic hazard. However, existing models of induced seismicity leave much to be desired. Some forecasting models, as evident from the blue, pink, and gray curves in the below figure, are highly inaccurate. Among the more accurate formulations, the physics-based Coupled Coulomb Rate-State (CRS) models are highly site-specific, prohibitively slow, and extremely resource-intensive — requiring supercomputers to train. Further, operation of these models demands significant domain knowledge at the level of a seismology PhD candidate, which limits their utility to a general operator at a CO\\(_2\\) sequestration plant.\n\n\nTime series of cumulative earthquake counts (black) observed in Canterbury, New Zealand between 2010 – 2012. Vertical lines label main quakes with magnitudes exceeding 5.9. Colored curves correspond to various models that have been fit to the data. Shaded areas around colored curves denote Poisson errors on forecasted earthquake counts. Reference: Cattania et al. (2018).\n\nAltogether, equipping CRS models with enhanced speed and accessibility can go a long way towards enabling rapid, accurate induced seismicity forecasts for safe carbon sequestration.\n\n\n\n\n\n\nCoupled Coulomb Rate-State (CRS) model\n\n\n\nWhat does a CRS model take as input? Spatiotemporal grids of subsurface fluid pore pressure and pressurization rate. These grids are computed using knowledge of the spatial distribution of injection wells and time series of fluid injection volume rates at each well.\nWhat does a CRS model output? Time series of cumulative earthquake counts in a specific locality or region of space. Precise locations of earthquake epicenters are not predicted.\n\n\n\n\n\n\n\n\nML-ready data products on Zenodo\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocation (USA)\nArea covered by earthquakes\nNo. of injection wells\nAssumed no. of causally connected earthquake clusters\nCause of induced earthquakes\n\n\n\n\nDecatur, Illinois\n4 km \\(\\times\\) 5 km\n1\n1\nSubsurface CO\\(_2\\) injection\n\n\nCushing, Oklahoma\n4 km \\(\\times\\) 6 km\n1\n1\nUnderground wastewater disposal\n\n\nKansas\n60 km \\(\\times\\) 45 km\n102\n8\nUnderground wastewater disposal\n\n\n\nFor every cluster in each location, we generated separate pressure and earthquake catalogs.\nPressure catalog: epoch, fluid pore pressure at seismicity centroid, pressurization rate at seismicity centroud\nSeismic catalog: epoch, northing, easting, depth, latitude, longitude, magnitude\nWe encourage interested readers to consult our technical report (see note near the top of this page) for references to data sources behind every catalog."
  },
  {
    "objectID": "projects/2022_08_31_FDL_CO2/index.html#the-road-to-a-streamlined-crs-model",
    "href": "projects/2022_08_31_FDL_CO2/index.html#the-road-to-a-streamlined-crs-model",
    "title": "Geomechanics for CO\\(_2\\) Sequestration",
    "section": "The Road to a Streamlined CRS Model",
    "text": "The Road to a Streamlined CRS Model\n\nSpeed gain: We successfully lowered model training time from a whopping 22 hours to a mere 3 minutes on a tablet through the following improvements.\n\n\nImplemented code vectorization in PyTorch for model speedup. Original CRS model was written in Python.\nReduced search space dimensionality by grouping redundant parameters in equations governing the CRS model.\nIntroduced the Adam optimizer from ML to navigate a smooth multi-dimensional loss landscape for model training. Original model used a slow grid search for parameter optimization.\n\n\nAccuracy enhancement: Integrated ML techniques (LSTM, SCINet) with our physics-based CRS model to build reliable forecasts across diverse horizon lengths. \n\n\nLong-range (blue curve in left panel) and short-range forecasts (blue curve in right panel) from our streamlined CRS model with ML enhancements. Red curves in both panels denote the data. The vertical dotted lines in both panels demarcate the boundaries between our training data to the left and our validation data to the right.\n\n\nAccessibility upgrade: Users of our streamlined CRS implementation now only need to understand basic signal processing, some elementary statistics, and the concept of model fitting. Domain knowledge in seismology is no longer a prerequisite for model operation.\n\nQuantifying model gains: \\[\n\\frac{{\\rm No. \\ of \\ CO_2 \\ sequestration \\ sites} \\times {\\rm Model \\  training \\ time} }{\\rm Time \\ between \\ runs} = {\\rm No. \\ of \\ operators \\ required}\n\\]\nOriginal CRS model (not scalable): \\[\n\\frac{{\\rm 30,000 } \\times {\\rm 1 \\ day} }{\\rm 5 \\ days } = {\\rm 6000 \\ analysts \\ from \\ a \\ pool \\ of \\ 10,000 \\ seismiology \\ PhDs}\n\\] This would require restructuring the academic seismological community to do repetitive tasks and stop working on other pressing issues. Also, achieving safety with forecasts would be expensive.\nStreamlined CRS model: \\[\n\\frac{{\\rm 30,000 } \\times {\\rm (1/10) \\ day} }{\\rm 5 \\ days } = {\\rm 600 \\ individuals\\ with \\ basic \\ computing \\ skills \\ (feasible)}\n\\]\nNote:\n\nIn the above calculations, we asummed a gap of 5 days between successive model runs.\nThough our streamlined CRS implementation comes with a training time of only 3 minutes, we assumed a generous modeling time of about 2 hours to account for any hardware setup that may be needed before runs."
  },
  {
    "objectID": "projects/2019_12_15_CNNclassifier/index.html#data-prep",
    "href": "projects/2019_12_15_CNNclassifier/index.html#data-prep",
    "title": "Convolutional Neural Networks for Signal Classification in Radio Astronomy",
    "section": "Data Prep",
    "text": "Data Prep\nWe generated simulated data for our study to circumvent the need to manually label thousands of real-world data chunks for supervised learning. As a first pass, we defined the following five classes for our signal classification task, including four categories of interference signals.\n\nllbb: Long-lived broadband interference + background Gaussian noise\nllnb: Long-lived narrowband interference + background Gaussian noise\nslbb: Short-lived broadband interference + background Gaussian noise\nslnb: Short-lived narrowband interference + background Gaussian noise\nnoise: Background Gaussian noise only\n\nFor each of the above classes, we simulated 1200 images of size 128 pixels \\(\\times\\) 128 pixels. From these, we randomly selected and set aside 200 images per category as validation data. The remaining images (1000 per category) formed our training dataset.\n\n\nSample frequency-time images of signals belonging to the llbb (top left), llnb (top right), slbb (bottom left) and slnb (bottom right) output classes.\n\nSince our training data are balanced across all output classes, we adopt the accuracy metric to quantify our model performance. During model training, we observed how the category-integrated model accuracy (defined below) varied with training epoch for our training and validation data. \\[\n{\\rm Network \\ accuracy \\ across \\ all \\ classes} = \\frac{\\rm No.\\  of\\  images \\\ncorrectly \\ classified}{\\rm Total \\ no. \\ of \\ images} \\times 100\\%\n\\] We also investigated confusion matrices built using category-specific model accuracies. We encourage interested readers to consult our project report for relevant details."
  },
  {
    "objectID": "projects/2019_12_15_CNNclassifier/index.html#model-architecture",
    "href": "projects/2019_12_15_CNNclassifier/index.html#model-architecture",
    "title": "Convolutional Neural Networks for Signal Classification in Radio Astronomy",
    "section": "Model Architecture",
    "text": "Model Architecture\nNeural net architectures for various applications are often arrived at through trial and error. In our study, we experimented with toy CNNs of different depths, studying their maximum achieved accuracy when optimally trained.\n\n\n\n\n\n\nNaming convention\n\n\n\nA neural network is said to be an N-layer network if it contains N layers excluding its input layer. A 1-layer network, by definition, then contains zero hidden layers between its input and output layers.\n\n\nOur base network is a 6-layer model whose hidden layers include two convolutional layers, two max-pooling layers, and one fully connected (or dense) layer. We sandwiched ReLU activation functions between our convolutional and max-pooling layers to enable our model to learn non-linear behaviors. Finally, the outputs of our flattened dense layer are normalized to probabilities using a softmax activation function.\n\n\nOur base 6-layer CNN model\n\nWe built models of greater depth by inserting additional convolutional and max-pooling layers ahead of our dense layer. We refer readers to Figures 7–10 of our project report for architecture diagrams of our deeper models."
  },
  {
    "objectID": "projects/2019_12_15_CNNclassifier/index.html#model-training-results",
    "href": "projects/2019_12_15_CNNclassifier/index.html#model-training-results",
    "title": "Convolutional Neural Networks for Signal Classification in Radio Astronomy",
    "section": "Model Training & Results",
    "text": "Model Training & Results\nWe trained all of our models using the categorical cross-entropy (CE) loss function to perform multiclass classification. Further, we uniformly applied the Adam optimizer for model backpropagation with an initial learning rate of \\(10^{-5}\\).\n\n\nAccuracy curves for CNN models of different depths (various colors). Dotted and solid curves represent network performances on the training and validation data respectively.\n\nStarting with our base network (blue curves), we notice that our model performance grows monotonically on the training data (dotted curve) with increasing epoch. However, the network accuracy on the validation data (solid curve) drops after epoch 3, suggesting that the model has now begun to overfit the training data. Based on these trends, we reloaded our saved model weights from epoch 3 to obtain robust predictions using our 6-layer network. Note that our 6-layer model, even at epoch 3, only reaches a maximum accuracy of \\(85\\%\\) on the validation data.\nTraining CNNs of increasing depth, we observe a growth in the maximum network accuracy achieved under conditions of a robust fit. However, the incremental gain in network accuracy diminishes with every added layer. Setting a 95% accuracy threshold, we find that an 8/9-layer CNN model is adequate for our classification problem."
  },
  {
    "objectID": "projects/2019_12_15_CNNclassifier/index.html#areas-for-improvement",
    "href": "projects/2019_12_15_CNNclassifier/index.html#areas-for-improvement",
    "title": "Convolutional Neural Networks for Signal Classification in Radio Astronomy",
    "section": "Areas for Improvement",
    "text": "Areas for Improvement\n\nOur definition of interference signal classes is overly simplistic to allow ready extension to real-world data. Interference signals in radio telescope data often exhibit complex spectrotemporal characteristics that do not fall neatly into any of our predefined output classes. For instance, consider the below sawtooth interference signal (some sort of radar?) seen in data from the Green Bank Telescope in West Viriginia, USA. \nOur models do not account for scenarios where multiple signal classes are present in a single frequency-time snippet. For instance, what if a weak astrophysical signal of interest happens to coincide in time with two bright interference signals of different bandwidths?\n\n\nPerhaps multilabel classification is worth an exercise.\nAlternatively, image segmentation routines may present a path forward."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "My Projects",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nGeomechanics for CO\\(_2\\) Sequestration\n\n\n\n\n\n\n\nTime Series Forecasting\n\n\nPhysics-informed AI\n\n\nSupervised Learning\n\n\nAI for Climate\n\n\n\n\nCarbon sequestration involves capturing CO\\(_2\\) from factories or directly from the air and storing it underground as a supercritical fluid. Geologic carbon capture and storage is required to meet global carbon neutrality goals, with over 30 gigatons of CO\\(_2\\) storage needed in the US alone by 2050. However, subsurface carbon storage comes with a catch. One may artificially induce…\n\n\n\n\n\n\nAug 31, 2022\n\n\nAkshay Suresh\n\n\n\n\n\n\n  \n\n\n\n\nPredicting Fertilizer Input for Rice Cultivation in India\n\n\n\n\n\n\n\nAI for Agriculture\n\n\nData Science\n\n\nGeospatial Data Science\n\n\nSupervised Learning\n\n\nUnsupervised Learning\n\n\n\n\nHome to over 1.38 billion people, India is tackling a severe hunger crisis. Though the country has achieved self-sufficiency in grain production, nearly 14% of the population is still undernourished. India’s agricultural landscape is primarily rural, where widespread poverty, low literacy rates, and poor infrastructure lead to questions over its sustainability. Indiscriminate use of fertilizers…\n\n\n\n\n\n\nJun 15, 2022\n\n\nAkshay Suresh\n\n\n\n\n\n\n  \n\n\n\n\nConvolutional Neural Networks for Signal Classification in Radio Astronomy\n\n\n\n\n\n\n\nAstronomy\n\n\nComputer Vision\n\n\nDeep Learning\n\n\nSupervised Learning\n\n\n\n\nRadio waves from human technologies frequently interfere with searches for exotic astrophysical phenomena, yielding hordes of false positives in downstream signal detection pipelines. Discerning astronomical signals of interest from a pile of false positives presents a “needle in a haystack” challenge demanding significant human time investment. Implementing interference blocking at telescope…\n\n\n\n\n\n\nDec 15, 2019\n\n\nAkshay Suresh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Research Experience\n\n\n\n\n\n10/2023 – Present\n\n\nIndependent Study & Research Upskilling\n\n\n\n\n\n\n08/2017 – 06/2023\n\n\nGraduate Researcher, Cornell University, Ithaca, NY, USA AI and Signal Processing for Automated Astrophysical Event Discovery Deep Learning Signal Processing Python Pytorch Radio Astronomy\n\n\n\n\n\n06/2022 – 08/2022\n\n\nMachine Learning Researcher, Frontier Development Lab USA Time Series Forecast of Earthquake Rates from Underground Carbon Storage Time Series Forecasting LSTM Pytorch Teamwork Climate Adaptation\n\n\n\n\n\n09/2021 – 06/2022\n\n\nVisiting Researcher, University of California, Berkeley, USA Software Development for Radar Detection from Alien Worlds [Reuters press release] [NPR Podcast] Production Code Development Python Search for Extraterrestrial Intelligence\n\n\n\n\n\n\n Technical Skills\n\n\n\n\n\nProgramming\n\n\nPython (PyTorch, scikit-learn, numpy, pandas, matplotlib, seaborn, plotly), bash scripting, SQL, \\(\\LaTeX\\), HTML\n\n\n\n\n\nMachine learning\n\n\n\n\nSupervised learning:\n\n\nLinear regression, lasso & ridge regularization\n\n\nDecision trees, random forest\n\n\nSupport vector machine (SVM)\n\n\n\\(k\\)-nearest neighbors (kNN)\n\n\nConvolutional neural networks (CNN)\n\n\nRecurrent neural networks (RNN)\n\n\nLong short-term memory networks (LSTM)\n\n\n\n\nUnsupervised learning:\n\n\n\\(k\\)-means clustering\n\n\nGaussian mixture models (GMM)\n\n\n\n\nPrincipal component analysis (PCA)\n\n\nStochastic gradient descent (SGD)\n\n\nAdam optimization\n\n\n\n\n\n\n\nSoftware Engineering\n\n\nProduction code development, high performance computing (HPC)\n\n\n\n\n\nCloud Computing\n\n\nGoogle Cloud Platform (GCP), Amazon Web Services (AWS)\n\n\n\n\n\nOperating Systems\n\n\nLinux, iOS\n\n\n\n\n\nOther Software\n\n\nMicrosoft 365 Suite\n\n\n\n\n\n\n Education\n\n \n \n\n    \n        \n            \n        \n    \n        MS & PhD\n             2017 – 2023 \n        \n        \n            Major: Astronomy \n            Minor: Physics   \n        \n    \n    \n        GPA: 4.0/4.0 \n        Cranson & Edna B. Shelley Outstanding Teaching Assistant Award (2019)  \n    \n    \n\n  \n\n \n    \n        \n            \n              Indian Institute of Science Education & Research, Pune\n        \n    \n        BS & MS with Distinction\n             2012 – 2017 \n        \n        \n            Major: Physics \n            Minor: Mathematics   \n        \n    \n    \n        GPA: 9.9/10 \n        Institute Gold Medal (2017)  \n    \n\n\n\n Licenses & Certifications\n\n\n\n\n\n04/2023\n\n\nErdös Institute Data Visualization Mini-course\n\n\n\n\n\n06/2022\n\n\nErdös Institute Data Science Bootcamp\n\n\n\n\n\n\n Recreational Activities\n\nI have been an avid cricket fan since my teenage years. When possible, I attempt to experience major cricketing matches live in stadiums worldwide. Attending the World T20 final 2022 at the Melbourne Cricket Ground is most cherished cricketing memory to date.\n\n\n\n    \n    \n        \n        \n        \n        \n        \n        \n    \n    \n    \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n                        \n    \n    \n    \n    \n        \n        Previous\n    \n    \n    \n    \n        \n        Next\n    \n\n\n\nI enjoy destressing from work through board games and food. Gameistry Entertainment (Chennai, India) and Victory Point Cafe (Berkeley, CA, USA) are two personal favorite board game destinations. I maintain here a list of board games I have played since 2020. Hoping to grow this list further in the coming years!\nI love taking time out from my schedule to appreciate the Earth’s natural wonders. Witnessing the dance of the Aurora Borealis (aka the Northern Lights) in interior Alaska was a dream come true in 2022.\n\n\n\n    \n    \n        \n        \n        \n        \n        \n    \n    \n    \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n            \n                     \n    \n    \n    \n    \n        \n        Previous\n    \n    \n    \n    \n        \n        Next"
  }
]